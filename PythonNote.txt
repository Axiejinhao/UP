取消print换行 print("123", end="")

列表[]
元组() 元素不能修改
字典{} 类似map集合

生成二维2行5列的列表 	list1 = [[0] * 5 for i in range(2)]
			list1 = [[0] * 5 for i in range(4) if i<=1 ]
		     
元组作为格式化字符输出  tuple1 = ("xjh", 180, 22)
			print("nam:%s height:%d age:%d" % tuple1)

将字符串列表以str为分隔符连接 str.join(字符串列表)

通过切片输出倒叙 num_list[::-1]

运算符 +:合并
      *:重复python
      in:元素是否存在

for i in range(1,3):
    print(i)
    # for循环未被break时,else执行
else:
    print("end")
    
字典的key是不可变类型

函数内部不能直接修改全局变量的值(可以用global声明变量)

可以使用多个变量接受元组的返回值

交换a,b的值 a, b = b, a

列表的+=相当于extend()

python的区反是 not

函数的缺省参数应该在参数列表的末尾

函数多值参数 一个*代表元组,两个**代表字典
		demo(num, *nums, **person)
		demo(1, 2, 3, 4, name="xiaoming", age=16)
		拆包
		gl_nums = (1, 2, 3)
		gl_dict = {"name": "xiaoming", "age": 18}
		demo(*gl_nums, **gl_dict)

字符串格式化
	f-string: name = "Tom"
		  f"My name is {name}"
	string.format: a = "名字是:{0},年龄是:{1}"
			a.format("Tom",18)

私有属性和方法在名称前增加两个下划线
强行访问私有属性和方法:_类名__属性名 / _类名__方法名

通过()进行继承: class Dog(Animal):

调用父类 super().eat()

如果使用 对象.类属性 = 值 赋值语句, 只会给对象添加一个属性,而不会影响类属性的值
建议使用 类名.类属性

类方法需要修饰器 @classmethod

静态方法需要修饰器 @staticmethod 类名.静态方法

__new__方法重写一定要 return super().__new__(cls)

单例对象只有唯一的实例
    def __new__(cls, *args, **kwargs):
        if cls.instance is None:
            cls.instance = super().__new__(cls)
        return cls.instance
只进行一次初始化可以使用flag判断

查看继承的优先级 print(C.__mro__)

捕获未知错误: try:
                pass
            except Exception as result:
                print(result)
            else:
                print("没有报错则执行")
            finallPacky:
                print("都执行")

主动抛出异常: ex = Exception("...")
            raise ex

只在测试情况下运行模块代码而被导入时不会被执行:
if __name__ == '__main__':
    pass

在外界使用包模块,需要在 __init__.py 中指定对外界提供的模块列表
from . import xxx

制作发布模块的压缩包
1.创建setup.py文件
from distutils.core import setup
setup(
    name="message",  # 包名称
    version="1.0",  # 版本号
    description="",  # 描述信息
    long_description="",  # 详细描述信息
    author="",  # 作者
    author_email="",  # 作者邮箱
    url="",  # 主页链接
    py_modules=["", ""]  # 要发布的模块 如.demo1.demo1def
)
2.构建模块
在该文件夹下终端输入 python3 setup.py build
3.生成发布压缩包
python3 setup.py sdist
4.安装模块
tar -zxvf xxx.tar.gz
sudo python3 setup.py install
5.卸载模块
cd /usr/local/lib/python3.8/dist-packages/
sudo rm -r xxx*

大文件复制可以逐行读写 while + readline()

eval()函数:将字符串当成有效的表达式来求值并返回计算结果

